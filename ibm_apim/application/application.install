<?php

/**
 * @file
 * Install, update and uninstall functions for the application module.
 */

/**
 * Implements hook_install().
 */
function application_install() {
  // Ensure the application node type is available.
  node_types_rebuild();
  _application_add_custom_fields();
}

/**
 * Implements hook_uninstall().
 */
function application_uninstall() {
  _application_delete_node_content('application');
  _application_delete_custom_fields();
  node_type_delete('application');
  field_purge_batch(500);
}

/**
 * Custom fields for Application content type.
 */
function _application_installed_fields() {
  $t = get_t();
  return array(
    'application_apiid' => array(
      'field_name' => 'application_apiid',
      'label' => $t('IBM_APIM ID'),
      'type' => 'text'),
    'application_description' => array(
      'field_name' => 'application_description',
      'label' => $t('IBM_APIM Description'),
      'type' => 'text_long'),
    'application_orgid' => array(
      'field_name' => 'application_orgid',
      'label' => $t('IBM_APIM Organization ID'),
      'type' => 'text'),
    'application_public' => array(
      'field_name' => 'application_public',
      'label' => $t('IBM_APIM Public'),
      'type' => 'text'),
    'application_credentialsurl' => array(
      'field_name' => 'application_credentialsurl',
      'label' => $t('IBM_APIM Credentials URL'),
      'type' => 'text'),
    'application_enabled' => array(
      'field_name' => 'application_enabled',
      'label' => $t('IBM_APIM Enabled'),
      'type' => 'text'),
    'application_imageurl' => array(
      'field_name' => 'application_imageurl',
      'label' => $t('IBM_APIM Image URL'),
      'type' => 'text'),
    'application_oauthredirecturi' => array(
      'field_name' => 'application_oauthredirecturi',
      'label' => $t('IBM_APIM OAuth Redirect URL'),
      'type' => 'text'),
    'application_url' => array(
      'field_name' => 'application_url',
      'label' => $t('IBM_APIM URL'),
      'type' => 'text'),
    'application_updated' => array(
      'field_name' => 'application_updated',
      'label' => $t('IBM_APIM Updated'),
      'type' => 'text'));
}

function _application_installed_instances() {
  $t = get_t();
  return array(
    'application_apiid' => array(
      'field_name' => 'application_apiid',
      'type' => 'text',
      'label' => $t('IBM_APIM ID'),
      'widget' => array('type' => 'text_textfield'),
      'display' => array(
        'default' => array('label' => $t('IBM_APIM ID'), 'type' => 'text'),
        'teaser' => array('label' => $t('IBM_APIM ID'), 'type' => 'text'))),
    'application_description' => array(
      'field_name' => 'application_description',
      'type' => 'text_long',
      'label' => $t('IBM_APIM Description'),
      'widget' => array('type' => 'text_textarea'),
      'display' => array(
        'default' => array(
          'label' => $t('IBM_APIM Description'),
          'type' => 'text_long'),
        'teaser' => array(
          'label' => $t('IBM_APIM Description'),
          'type' => 'text_long'))),
    'application_orgid' => array(
      'field_name' => 'application_orgid',
      'type' => 'text',
      'label' => $t('IBM_APIM Organization ID'),
      'widget' => array('type' => 'text_textfield'),
      'display' => array(
        'default' => array(
          'label' => $t('IBM_APIM Organization ID'),
          'type' => 'text'))),
    'application_public' => array(
      'field_name' => 'application_public',
      'type' => 'text',
      'label' => $t('IBM_APIM Public'),
      'widget' => array('type' => 'text_textfield'),
      'display' => array(
        'default' => array('label' => $t('IBM_APIM Public'), 'type' => 'text'))),
    'application_credentialsurl' => array(
      'field_name' => 'application_credentialsurl',
      'type' => 'text',
      'label' => $t('IBM_APIM Credentials URL'),
      'widget' => array('type' => 'text_textfield'),
      'display' => array(
        'default' => array(
          'label' => $t('IBM_APIM Credentials URL'),
          'type' => 'text'))),
    'application_enabled' => array(
      'field_name' => 'application_enabled',
      'type' => 'text',
      'label' => $t('IBM_APIM Enabled'),
      'widget' => array('type' => 'text_textfield'),
      'display' => array(
        'default' => array('label' => $t('IBM_APIM Enabled'), 'type' => 'text'))),
    'application_imageurl' => array(
      'field_name' => 'application_imageurl',
      'type' => 'text',
      'label' => $t('IBM_APIM Image URL'),
      'widget' => array('type' => 'text_textfield'),
      'display' => array(
        'default' => array(
          'label' => $t('IBM_APIM Image URL'),
          'type' => 'text'),
        'teaser' => array('label' => $t('IBM_APIM Image URL'), 'type' => 'text'))),
    'application_oauthredirecturi' => array(
      'field_name' => 'application_oauthredirecturi',
      'type' => 'text',
      'label' => $t('IBM_APIM OAuth Redirect URI'),
      'widget' => array('type' => 'text_textfield'),
      'display' => array(
        'default' => array(
          'label' => $t('IBM_APIM OAuth Redirect URI'),
          'type' => 'text'))),
    'application_url' => array(
      'field_name' => 'application_url',
      'type' => 'text',
      'label' => $t('IBM_APIM URL'),
      'widget' => array('type' => 'text_textfield'),
      'display' => array(
        'default' => array('label' => $t('IBM_APIM URL'), 'type' => 'text'))),
    'application_updated' => array(
      'field_name' => 'application_updated',
      'type' => 'text',
      'label' => $t('IBM_APIM Updated'),
      'widget' => array('type' => 'text_textfield'),
      'display' => array(
        'default' => array('label' => $t('IBM_APIM Updated'), 'type' => 'text'),
        'teaser' => array('label' => $t('IBM_APIM Updated'), 'type' => 'text'))));
}

function _application_add_custom_fields() {
  // Application
  foreach (_application_installed_fields() as $field) {
    field_create_field($field);
  }
  foreach (_application_installed_instances() as $fieldinstance) {
    $fieldinstance['entity_type'] = 'node';
    $fieldinstance['bundle'] = 'application';
    field_create_instance($fieldinstance);
  }
}

function _application_delete_custom_fields() {
  // Application
  foreach (array_keys(_application_installed_fields()) as $field) {
    field_delete_field($field);
  }
  $instances = field_info_instances('node', 'application');
  foreach ($instances as $instance_name => $fieldinstance) {
    field_delete_instance($fieldinstance);
  }
}

// delete all nodes of specified type
function _application_delete_node_content($type) {
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => $type));
  $nodeids = array();
  foreach ($result as $row) {
    $nodeids[] = $row->nid;
  }
  node_delete_multiple($nodeids);
}